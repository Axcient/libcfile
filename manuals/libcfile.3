.Dd March 27, 2013
.Dt libcfile 3
.Os libcfile
.Sh NAME
.Nm libcfile.h
.Nd Library to support cross-platform C file functions
.Sh LIBRARY
.Lb libcfile
.Sh SYNOPSIS
.In libcfile.h
.Pp
Support functions
.Ft const char *
.Fn libcfile_get_version "void"
.Pp
Error functions
.Ft void
.Fn libcfile_error_free "libcfile_error_t **error"
.Ft int
.Fn libcfile_error_fprint "libcfile_error_t *error, FILE *stream"
.Ft int
.Fn libcfile_error_sprint "libcfile_error_t *error, char *string, size_t size"
.Ft int
.Fn libcfile_error_backtrace_fprint "libcfile_error_t *error, FILE *stream"
.Ft int
.Fn libcfile_error_backtrace_sprint "libcfile_error_t *error, char *string, size_t size"
.Pp
File functions
.Ft int
.Fn libcfile_file_initialize "libcfile_file_t **file, libcfile_error_t **error"
.Ft int
.Fn libcfile_file_free "libcfile_file_t **file, libcfile_error_t **error"
.Ft int
.Fn libcfile_file_open "libcfile_file_t *file, const char *filename, int access_flags, libcfile_error_t **error"
.Ft int
.Fn libcfile_file_open_with_error_code "libcfile_file_t *file, const char *filename, int access_flags, uint32_t *error_code, libcfile_error_t **error"
.Ft int
.Fn libcfile_file_close "libcfile_file_t *file, libcfile_error_t **error"
.Ft ssize_t
.Fn libcfile_file_read_buffer "libcfile_file_t *file, uint8_t *buffer, size_t size, libcfile_error_t **error"
.Ft ssize_t
.Fn libcfile_file_read_buffer_with_error_code "libcfile_file_t *file, uint8_t *buffer, size_t size, uint32_t *error_code, libcfile_error_t **error"
.Ft ssize_t
.Fn libcfile_file_write_buffer "libcfile_file_t *file, const uint8_t *buffer, size_t size, libcfile_error_t **error"
.Ft ssize_t
.Fn libcfile_file_write_buffer_with_error_code "libcfile_file_t *file, const uint8_t *buffer, size_t size, uint32_t *error_code, libcfile_error_t **error"
.Ft off64_t
.Fn libcfile_file_seek_offset "libcfile_file_t *file, off64_t offset, int whence, libcfile_error_t **error"
.Ft int
.Fn libcfile_file_resize "libcfile_file_t *file, size64_t size, libcfile_error_t **error"
.Ft int
.Fn libcfile_file_is_open "libcfile_file_t *file, libcfile_error_t **error"
.Ft int
.Fn libcfile_file_get_offset "libcfile_file_t *file, off64_t *offset, libcfile_error_t **error"
.Ft int
.Fn libcfile_file_get_size "libcfile_file_t *file, size64_t *size, libcfile_error_t **error"
.Ft int
.Ft libcfile_file_io_control_read "libcfile_file_t *file, uint32_t control_code, uint8_t *data, size_t data_size, libcfile_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libcfile_file_open_wide "libcfile_file_t *file, const wchar_t *filename, int access_flags, libcfile_error_t **error"
.Ft int
.Fn libcfile_file_open_wide_with_error_code "libcfile_file_t *file, const wchar_t *filename, int access_flags, uint32_t *error_code, libcfile_error_t **error"
.Pp
File stream functions
.Ft int
.Fn libcfile_stream_initialize "libcfile_stream_t **stream, libcfile_error_t **error"
.Ft int
.Fn libcfile_stream_free "libcfile_stream_t **stream, libcfile_error_t **error"
.Ft int
.Fn libcfile_stream_open "libcfile_stream_t *stream, const char *filename, int access_flags, libcfile_error_t **error"
.Ft int
.Fn libcfile_stream_close "libcfile_stream_t *stream, libcfile_error_t **error"
.Ft ssize_t
.Fn libcfile_stream_read_buffer "libcfile_stream_t *stream, uint8_t *buffer, size_t size, libcfile_error_t **error"
.Ft ssize_t
.Fn libcfile_stream_write_buffer "libcfile_stream_t *stream, const uint8_t *buffer, size_t size, libcfile_error_t **error"
.Ft off64_t
.Fn libcfile_stream_seek_offset "libcfile_stream_t *stream, off64_t offset, int whence, libcfile_error_t **error"
.Ft int
.Fn libcfile_stream_get_offset "libcfile_stream_t *stream, off64_t *offset, libcfile_error_t **error"
.Ft int
.Fn libcfile_stream_get_size "libcfile_stream_t *stream, size64_t *size, libcfile_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libcfile_stream_open_wide "libcfile_stream_t *file, const wchar_t *filename, int access_flags, libcfile_error_t **error"
.Sh DESCRIPTION
The
.Fn libcfile_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or -1 on error, dependent on the return type. For the actual return values refer to libcfile.h
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh BUGS
Please report bugs of any kind to <joachim.metz@gmail.com> or on the project website:
http://code.google.com/p/libcfile/
.Sh AUTHOR
These man pages were written by Joachim Metz.
.Sh COPYRIGHT
Copyright 2008-2013 Joachim Metz <joachim.metz@gmail.com>.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libcfile.h include file
